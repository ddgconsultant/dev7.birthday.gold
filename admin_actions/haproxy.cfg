# Global settings for HAProxy
global
    log /dev/log local0                # Log local0 events to /dev/log
    log /dev/log local1 notice         # Log local1 notices to /dev/log
    chroot /var/lib/haproxy            # Changes the effective root directory for added security
    stats socket /run/haproxy/admin.sock mode 0660 level admin expose-fd listeners # Unix socket for admin to connect for stats
    stats timeout 30s                  # Timeout for the stats socket
    user haproxy                       # User to run HAProxy
    group haproxy                      # Group to run HAProxy
    daemon                             # Run HAProxy as a background process

# Default settings that apply to all frontends and backends
defaults
    log global                         # Inherit global logging settings
    mode http                          # Default mode is http, individual frontends can override
    option httplog                     # Enable HTTP logging format
    option dontlognull                 # Ignore logging for null requests
    timeout connect 5000               # Timeout for establishing a connection (5 seconds)
    timeout client 50000               # Timeout for client inactivity (50 seconds)
    timeout server 50000               # Timeout for server inactivity (50 seconds)
    # Custom error files for different HTTP error codes
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# Stats interface
listen stats
 bind 0.0.0.0:8080
    mode http
    stats enable
    stats uri /
    stats realm Strictly\ Private
    stats auth admin:ZP6RMRP5


####################################################################################################
####################################################################################################
#-----------------------------------------------------------------------------
# HTTP frontend for handling standard web traffic
frontend http_frontend
    bind 195.35.14.143:80               # Bind to public IP on port 80
    acl blocked_ip src -f /etc/haproxy/blocked_ips.lst
    http-request deny if blocked_ip
    default_backend webservers_http     # Default backend for HTTP traffic

#-----------------------------------------------------------------------------
# HTTPS frontend for handling secure web traffic
frontend https_frontend
    bind 195.35.14.143:443 ssl crt /var/web_certs/BIRTHDAY_SERVER/birthday.gold/combined.pem
    acl blocked_ip src -f /etc/haproxy/blocked_ips.lst
    acl host_files hdr(host) -i files.birthday.gold
    http-request deny if blocked_ip
    use_backend backblaze if host_files # Use backblaze backend for files.birthday.gold
    default_backend webservers_https    # Default backend for HTTPS traffic

#-----------------------------------------------------------------------------
# Backend for handling HTTP traffic, with automatic HTTPS redirection
backend webservers_http
    balance source                      # Use source IP to distribute traffic
    option forwardfor                   # Enable insertion of X-Forwarded-For header
    http-request set-header X-Client-IP %[src] # Set custom header with client IP
    redirect scheme https if !{ ssl_fc } # Redirect HTTP to HTTPS if not already secure
    server july02 86.38.218.59:80 check
    server july03 82.180.131.216:80 check
    server july04 178.16.140.230:80 check
## END OF 80webservers-do not delete this line - it is used to add new webservers

#-----------------------------------------------------------------------------
# Backend for handling HTTPS traffic
backend webservers_https
    balance source                      # Use source IP to distribute traffic
    option forwardfor                   # Enable insertion of X-Forwarded-For header
    http-request set-header X-Client-IP %[src] # Set custom header with client IP
    server july02 86.38.218.59:443 ssl verify none check
    server july03 82.180.131.216:443 ssl verify none check
    server july04 178.16.140.230:443 ssl verify none check
## END OF 443webservers-do not delete this line - it is used to add new webservers

#-----------------------------------------------------------------------------
# Backend for handling files.birthday.gold
backend backblaze
    mode http
    balance source
    option forwardfor
    http-request set-header Host f005.backblazeb2.com
    http-request set-path /file/birthdaygold202306-cdn%[path]
    server backblaze_s3 s3.us-east-005.backblazeb2.com:443 ssl verify none



####################################################################################################
####################################################################################################
#-----------------------------------------------------------------------------
# MySQL listen block for development cluster with sticky sessions
listen mysql_dev_cluster
    bind *:3306                         # Listen on all interfaces at port 3306 for development cluster
    mode tcp
    balance leastconn                   # Opt for least connections balancing for initial connection
    stick-table type ip size 100k expire 30m  # Maintain client IP for 30 minutes
    stick on src                        # Stick sessions based on source IP
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    acl blocked_ip src -f /etc/haproxy/blocked_ips_dbs.lst
    tcp-request content reject if blocked_ip
    server mysql_dev1 71.33.250.235:3306 check

#-----------------------------------------------------------------------------
# MySQL listen block for production cluster with sticky sessions
listen mysql_prod_cluster
    bind *:3316                         # Listen on all interfaces at port 3316 for production cluster
    mode tcp
    balance leastconn
    stick-table type ip size 100k expire 30m
    stick on src
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    server mysql_prod1 86.38.218.59:3306 check
    server mysql_prod2 178.16.140.230:3306 check

#-----------------------------------------------------------------------------
# MySQL listen block for reporting cluster with sticky sessions
listen mysql_reporting_cluster
    bind *:3326                         # Listen on all interfaces at port 3326 for reporting cluster
    mode tcp
    balance leastconn
    stick-table type ip size 100k expire 30m
    stick on src
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    server mysql_reporting1 45.90.220.66:3306 check

#-----------------------------------------------------------------------------
# MySQL listen block for historical data cluster with sticky sessions
listen mysql_hist_cluster
    bind *:3336                         # Listen on all interfaces at port 3336 for historical data cluster
    mode tcp
    balance leastconn
    stick-table type ip size 100k expire 30m
    stick on src
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"
    server mysql_hist1 71.33.250.235:3306 check






####################################################################################################
####################################################################################################
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# MySQL frontend, listens on port 3306 and uses TCP mode
frontend mysql_frontend
    bind *:3306                         # Listen on all interfaces at port 3306
    mode tcp                            # Operate in TCP mode for MySQL traffic
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq"  # Custom log format including client IP (%ci) and port (%cp)
    acl is_mysql_dev_cluster req_ssl_sni -i mysql-dev-us-cluster-01
    acl is_mysql_hist_cluster req_ssl_sni -i mysql-hist-us-cluster-01
    acl is_mysql_prod_cluster req_ssl_sni -i mysql-prod-us-cluster-01
    acl is_reporting_cluster req_ssl_sni -i mysql-reporting-us-cluster-01
    use_backend mysql_dev_backends if is_mysql_dev_cluster
    use_backend mysql_hist_backends if is_mysql_hist_cluster
    use_backend mysql_prod_backends if is_mysql_prod_cluster
    use_backend mysql_reporting_backends if is_reporting_cluster

#-----------------------------------------------------------------------------
# MySQL backend for production cluster
backend mysql_prod_backends
    mode tcp                            # Use TCP mode for MySQL connections
    balance roundrobin                  # Distribute requests using round-robin algorithm
    server mysql_prod1 86.38.218.59:3306 check    fall 2 inter 1000                  # Updated hostname for mysql_prod1
    server mysql_prod2 178.16.140.230:3306 check  fall 2 inter 1000                  # Updated hostname for mysql_prod1
    # server mysql_prod3 13.0.0.3:3306 check      fall 2 inter 1000                  # Keeping original IP for mysql_prod3

#-----------------------------------------------------------------------------
# MySQL backend for development cluster
backend mysql_dev_backends
    mode tcp                            # Use TCP mode for MySQL connections
    balance roundrobin                  # Distribute requests using round-robin algorithm
    server mysql_dev1 71.33.250.235:3306 
    # server mysql_dev1 december01.bday.gold:3306 check
    # server mysql_dev2 10.0.0.2:3306 check
    # server mysql_dev3 10.0.0.3:3306 check

#-----------------------------------------------------------------------------
# MySQL backend for historical data cluster
backend mysql_hist_backends
    mode tcp                            # Use TCP mode for MySQL connections
    balance roundrobin                  # Distribute requests using round-robin algorithm
    server mysql_hist1 71.33.250.235:3306 
    # server mysql_hist1 december01.bday.gold:3306 check
    # server mysql_hist2 12.0.0.2:3306 check
    # server mysql_hist3 12.0.0.3:3306 check

#-----------------------------------------------------------------------------
# MySQL backend for reporting cluster
backend mysql_reporting_backends
    mode tcp                            # Use TCP mode for MySQL connections
    balance roundrobin                  # Distribute requests using round-robin algorithm
    server mysql_reporting1 45.90.220.66:3306 check  # New hostname for mysql_reporting1
    # server mysql_reporting1 december20.bday.gold:3306 check  # New hostname for mysql_reporting1
    # server mysql_reporting2 15.0.0.2:3306 check             # Keeping original IP for mysql_reporting2
    # server mysql_reporting3 15.0.0.3:3306 check             # Keeping original IP for mysql_reporting3
